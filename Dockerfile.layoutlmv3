# Use a base image from NVIDIA with CUDA
FROM nvidia/cuda:12.1.1-runtime-ubuntu20.04

ARG DEBIAN_FRONTEND=noninteractive

# Instals Python and pip
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y python3.10 python3.10-distutils python3.10-dev git \
                       build-essential cmake ninja-build

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 && \
    update-alternatives --set python3 /usr/bin/python3.10 && \
    apt-get install -y curl && \
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3.10 get-pip.py && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Install a specific version of networkx compatible with Python 3.8+
RUN pip3 install networkx==3.1

# Install torch and pycocotools
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
RUN pip3 install pycocotools>=2.0.2

# Copy the requirements file
COPY ./layoutlmv3/requirements.txt /app/

# Instals the dependencies
RUN pip install --no-cache-dir -r requirements.txt

# It installs the cv2 dependencies for the docker image
RUN apt-get update && apt-get install -y python3-opencv
RUN pip3 install opencv-python

# Install layoutparser ocr
RUN apt-get update && apt-get install -y tesseract-ocr libtesseract-dev
RUN pip3 install layoutparser[ocr]

RUN apt-get update && \
    apt-get install -y poppler-utils

# Copy the source code
COPY ./layoutlmv3 /app
COPY ./test_pdfs /app/test_pdfs

# Default command to run the application
CMD ["python3", "./predict_publaynet_layoulmv3.py"]
